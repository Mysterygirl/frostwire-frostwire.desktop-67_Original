<project name="DAAP" default="jar" basedir=".">
    <description>DAAP support</description>

    <property name="version" value="1.1"/>
	
    <property name="basedir" value="."/>
    <property name="javadoc" value="${basedir}/javadoc"/>
    
    <property name="gui" value="${basedir}/../gui"/>
    <property name="core" value="${basedir}/../core"/>
    <property name="tests" value="${basedir}/../tests"/>
    
    <property name="lib" value="${basedir}/../"/>
    <property name="jars" value="${lib}/dist"/>
  
	<property name="DEBUG" value="yes"/>
	<property name="OPTIMIZE" value="yes"/>
	
    <path id="default.classpath">
        <pathelement location="${basedir}"/>
        <pathelement location="${core}"/>
        <pathelement location="${gui}"/>
        <fileset dir="${jars}" includes="*.jar" excludes="daap.jar"/>
    </path>
    
    <target name="init">
        <available file="${jars}" type="dir" property="jars.present"/>
        <tstamp/>
        <antcall target="checkjars"/>
    </target>
    
    <target name="checkjars" unless="jars.present">
        <echo message="*******************************************************"/>
        <echo message="*******  YOU MUST CHECKOUT THE lib MODULE *************"/>
        <echo message="**** and place it as a sibling to this daap module ****"/>
        <echo message="*******************************************************"/>
    </target>
    
	<target name="build" depends="init">
	    <javac srcdir="${basedir}" 
	    			destdir="${basedir}" 
	    			excludes="**/tests/*"
        			target="1.5"
        			source="1.5"
        			compiler="javac1.5"
        			debug="${DEBUG}"
                    optimize="${OPTIMIZE}" 
                    deprecation="no">
			<classpath refid="default.classpath"/>
	    </javac>
	</target>

    <target name="runTest" depends="init">
        <java classname="de.kapsi.net.daap.Main">
            <classpath refid="default.classpath"/>
        </java>
    </target>
    
    <target name="runLime" depends="init">
        <java classname="com.limegroup.gnutella.gui.Main" dir="${gui}" fork="true">
            
            <sysproperty key="java.library.path" value="../lib/native"/>
            <sysproperty key="java.util.logging.config.file" 
                                value="jdk14.logging.properties"/>
            
            <classpath refid="default.classpath"/>
            
            <classpath>
                <pathelement location="/System/Library/Java"/>
                <pathelement location="../lib/messagebundles"/>
            </classpath>
            
        </java>
    </target>
    
    <target name="javadoc">
		
        <mkdir dir="${javadoc}"/>

		<javadoc 
		        destdir="${javadoc}"
		        author="true"
		        version="true"
		        use="true">
		
			<classpath refid="default.classpath"/>
			
			<!--<classpath>
				<fileset dir="${tests}" includes="lib/*.jar"/>
			</classpath>-->
			
			<packageset dir="${basedir}"/>
		
		</javadoc>
    </target>

     <target name="jar">
        <javac srcdir="${basedir}" 
        			destdir="${basedir}" 
        			excludes="**/tests/*"
        			target="1.5"
        			source="1.5"
        			compiler="javac1.5"
        			debug="${DEBUG}"
                    optimize="${OPTIMIZE}" 
                    deprecation="no">
            <classpath refid="default.classpath"/>
        </javac>
        
        <jar destfile="../dist/daap.jar" 
                        basedir="${basedir}" 
                        includes="**/*.class"
            				compress="false"
                        excludes="**/Main.* 
                            de/kapsi/net/daap/tools/**/*.*
                            de/kapsi/net/daap/tests/**/*.*"/>
    </target>

    <target name="src-jar">
        <jar destfile="daap-${version}-src.jar" 
                        basedir="${basedir}" 
                        includes="**/*.java"
						compress="false"
                        excludes="**/Main.* 
                            de/kapsi/net/daap/tools/**/*.*
                            de/kapsi/net/daap/tests/**/*.*"/>
    </target>
		
    <target name="clean" description="clean up">
        <delete>
            <fileset dir="${basedir}">
                <include name="**/*.class"/>
            </fileset>
        </delete>
    </target>
</project>
