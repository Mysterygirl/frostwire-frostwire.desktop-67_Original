<?xml version="1.0"?>
<project name="FileUtil Incubator build script" default="showtargets" basedir=".">

  <!--
This is the master build script for use with the Jakarta Ant build tool
to build the source code of JDIC FileUtil project.

For Ant, see http://jakarta.apache.org/ant/index.html

Top-level target:
  buildall:         Build a JDIC API distribution for the current platform.
  clean:            Remove the generated distribution (including files and directories).
  jni:              Generate JNI headers(.h).

-->

  <!-- the top-level package names -->
  <property name="pkg.jdic.name" value="org.jdesktop.jdic" />
  <property name="pkg.fileutil.name" value="${pkg.jdic.name}.fileutil" />

  <!-- the path of source directory -->
  <property name="src.dir" value="src" />
  <property name="share.classes.dir" value="${src.dir}/share/classes" />
  <property name="solaris.classes.dir" value="${src.dir}/solaris/classes" />
  <property name="unix.classes.dir" value="${src.dir}/unix/classes" />
  <property name="win32.classes.dir" value="${src.dir}/win32/classes" />
  <property name="mac.classes.dir" value="${src.dir}/mac_os_x/classes" />

  <property name="unix.native.dir" value="${src.dir}/unix/native" />
  <property name="unix.native.jni.dir" value="${unix.native.dir}/jni" />
	
  <property name="solaris.native.dir" value="${src.dir}/solaris/native" />
  <property name="solaris.native.jni.dir" value="${solaris.native.dir}/jni" />

  <property name="win32.native.dir" value="${src.dir}/win32/native" />
  <property name="win32.native.jni.dir" value="${win32.native.dir}/jni" />

  <property name="mac.native.dir" value="${src.dir}/mac_os_x/native" />
  <property name="mac.native.jni.dir" value="${mac.native.dir}/jni" />

  <!-- the distribution version and release of this build -->
  <!-- which is used in javadoc and distzip targets -->
  <property name="version" value="0.2" />
  <property name="release" value="1" />

  <!-- the generated jar file name -->
  <property name="jar.file" value="jdic_fileutil.jar" />

  <target name="showtargets" description="default target showing all available targets">
    <echo>The top-level targets are:
            buildall:  Build a JDIC API distribution for the current platform
            (Windows, Linux, Solaris, or Mac OS X).
            clean:     Remove the generated distribution.

          The generated distribution is put under *dist* directory.
    </echo>
  </target>

  <!--
    - SHARED TARGETS
    -->
  <target name="init" description="the init target">
    <property environment="env" />
    <property name="env.DEBUG" value="OFF" />
    <!-- default, if not supplied by environment -->
    <property name="javac.debug" value="${env.DEBUG}" />

    <!-- Create the time stamp -->
    <tstamp />

    <!-- Set platform-dependent distribution directory -->
    <condition property="os-arch" value="windows">
      <os family="windows" />
    </condition>

    <condition property="os-arch" value="linux">
      <os name="linux" />
    </condition>

    <condition property="os-arch" value="solaris-sparc">
      <os name="sunos" arch="sparc" />
    </condition>

    <condition property="os-arch" value="solaris-x86">
      <os name="sunos" arch="x86" />
    </condition>

    <condition property="os-arch" value="mac-os_x">
      <os name="Mac OS X" />
    </condition>

    <!-- Create the distribution directory -->
    <property name="dist.dir" value="dist" />
    <mkdir dir="${dist.dir}" />
    <property name="native.dir" value="${dist.dir}/${os-arch}" />
    <mkdir dir="${native.dir}" />

    <echo>++++++++++++++++++++++++++++++++++++++++++++++++++++</echo>
    <echo>+ JDIC API build version ${version} release ${release}</echo>
    <echo>+ The distribution directory is: .${file.separator}${dist.dir}${file.separator}</echo>
    <echo>++++++++++++++++++++++++++++++++++++++++++++++++++++</echo>
  </target>

  <!-- *** Top-level target *** -->
  <!-- *** Clean the distribution directory *** -->
  <target name="clean" depends="init" description="clean up the built directory and files">
    <delete includeEmptyDirs="true" failonerror="false">
      <fileset dir="${dist.dir}" />
    </delete>
  </target>


  <!-- *** Top-level target *** -->
  <!-- *** Build a JDIC API distribution for the current platform *** -->
  <target name="buildall" description="build a distribution for the current platform.">
    <!-- Set the platform-dependent buildall target -->
    <condition property="platform.target" value="buildwin32">
      <os family="windows" />
    </condition>

    <condition property="platform.target" value="buildlinux">
      <os name="linux" />
    </condition>

    <condition property="platform.target" value="buildsolaris">
      <os name="sunos" />
    </condition>

    <condition property="platform.target" value="buildmac_os_x">
      <os name="Mac OS X" />
    </condition>

    <antcall target="${platform.target}" />

  </target>

  <!-- *** javadoc *** -->
  <target name="javadoc" depends="init"
          description="generate javadoc into ${dist.dir}/javadoc" >
    <javadoc packagenames="${pkg.fileutil.name}"
             destdir="${dist.dir}/javadoc"       
             author="false"
             version="false"
             use="true"
             Windowtitle="JDIC Incubator FileUtil API V${version} Release ${release}"
             Header="JDIC Incubator FileUtil API V${version} Release ${release}">
             <fileset dir="${src.dir}" defaultexcludes="yes">
               <include name="**/*.java"/>
               <exclude name="**/*MacOS*"/>
             </fileset>
             <docTitle><![CDATA[JDIC (JDesktop Integration Components) 
               <br> API Specification, Version ${version} Release ${release}]]>
             </docTitle>
             <bottom><![CDATA[<font size="-1">For more information and documentation on JDIC, 
               see <a href="https://jdic.dev.java.net">JDIC website</a>. <p>That documentation 
               contains more detailed, developer-targeted descriptions, with conceptual 
               overviews, working code examples, license terms and bug report information.
               <p>Copyright (c) 2005 Sun Microsystems, Inc. All rights reserved. Use is 
               subject to <a href=
               "https://jdic.dev.java.net/source/browse/jdic/src/COPYING">license terms</a>. 
               </font>]]>
              </bottom>
              <link href="http://java.sun.com/j2se/1.4.2/docs/api/"/>
    </javadoc>
  </target>
  
  <!-- *** Build jar file *** -->
  <target name="buildjar" depends="init" description="build the classes and jar file.">
    <javac srcdir="${share.classes.dir}:${win32.classes.dir}:${unix.classes.dir}:${solaris.classes.dir}" destdir="${dist.dir}" classpath="${dist.dir}" debug="${javac.debug}" target="1.4" source="1.4"/>

    <jar destfile="${dist.dir}/${jar.file}" update="false">
      <fileset dir="${dist.dir}" includes="org/**/*.class" />
    </jar>

    <!-- remove the generated "org" directory -->
    <delete includeEmptyDirs="true" failonerror="false">
      <fileset dir="${dist.dir}/org" />
    </delete>
  </target>

  <!--
    - WIN32 DISTRIBUTION
    -->
  <target name="buildwin32" depends="buildjar, javadoc" description="build java and native source code for Win32 platform">
  </target>
  
  <!-- *** Build Win32 native JNI code *** -->
  <target name="buildwin32jni" depends="init" description="build native jni libraries.">

    <exec dir="${win32.native.jni.dir}" executable="make" failonerror="yes">
      <arg line="jdic_fileutil.dll" />
    </exec>

    <!-- copy generated .dll file -->
    <copy file="${win32.native.jni.dir}/jdic_fileutil.dll" todir="${native.dir}" />
  </target>

  <!--
    - LINUX DISTRIBUTION
    -->
  <target name="buildlinux" depends="buildjar, javadoc" description="build java and native source code for Linux platform">
  </target>

  <!--
    - SOLARIS DISTRIBUTION
    -->
  <!-- This target is the same with buildlinux. -->
  <target name="buildsolaris" depends="buildlinux" description="build java and native source code for Solaris platform">
  </target>

  <!-- *** Build Unix native JNI code *** -->
  <target name="buildunixjni" depends="init" description="build native jni libraries.">
    <exec dir="${unix.native.jni.dir}" executable="make" failonerror="yes" />

    <!-- copy generated .so file -->
    <copy file="${unix.native.jni.dir}/libjdic_fileutil.so" todir="${native.dir}" />
  </target>

  <!--
    - MAC OS X DISTRIBUTION
    -->
  <target name="buildmac_os_x" depends="buildjar" description="build java and native source code for Mac OS X">
  </target>

  <!-- *** Build Mac native JNI code *** -->
  <target name="buildmacjni" depends="init" description="build native jni libraries.">
    <exec dir="${mac.native.jni.dir}" executable="make" failonerror="yes" />

    <!-- copy generated .jnilib file -->
    <copy file="${mac.native.jni.dir}/libjdic_fileutil.jnilib" todir="${native.dir}" />
  </target>
  
  <target name="jni" depends="init" description="generate header files.">
    <javah classpath="${dist.dir}/${jar.file}" class="org.jdesktop.jdic.fileutil.Win32NativeFileUtil" outputFile="${win32.native.jni.dir}/Win32NativeFileUtil.h" old="no" verbose="no"/>
    <javah classpath="${dist.dir}/${jar.file}" class="org.jdesktop.jdic.fileutil.Win32NativeRecentlyUsed" outputFile="${win32.native.jni.dir}/Win32NativeRecentlyUsed.h" old="no" verbose="no"/>
    <javah classpath="${dist.dir}/${jar.file}" class="org.jdesktop.jdic.fileutil.UnixNativeFileUtil" outputFile="${unix.native.jni.dir}/UnixNativeFileUtil.h" old="no" verbose="no"/>
    <javah classpath="${dist.dir}/${jar.file}" class="org.jdesktop.jdic.fileutil.SolarisNativeFileUtil" outputFile="${solaris.native.jni.dir}/SolarisNativeFileUtil.h" old="no" verbose="no"/>
    <!-- javah classpath="${dist.dir}/${jar.file}" class="org.jdesktop.jdic.fileutil.MacOSXNativeFileUtil" outputFile="${mac.native.jni.dir}/MacOSXNativeFileUtil.h" old="no" verbose="no"/ -->
  </target>

</project>